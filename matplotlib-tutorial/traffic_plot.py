import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mticker


def plot_learning_curve(x, costs, score, steps, time, filename=None):
    fig = plt.figure(figsize=(10, 5))

    ax = fig.add_subplot(111, label='1')
    ax2 = fig.add_subplot(111, label='2', frame_on=False)

    ax2.plot(x, score, color='g')
    ax2.set_xlabel(f'Training episodes \u2191 | Total steps: {steps} | Time: {time} min.', color='black')
    ax2.set_ylabel('Score', color='g')
    ax2.tick_params(axis='x', colors='black')
    ax2.tick_params(axis='y', colors='g')

    costs = -costs
    N = len(costs)
    running_avg = np.empty(N)
    for t in range(N):
        running_avg[t] = np.mean(costs[max(0, t - 100):(t + 1)])

    ax.scatter(x, running_avg, color='C1', s=6)

    ax.axes.get_xaxis().set_visible(False)
    ax.xaxis.set_major_locator(mticker.MaxNLocator(integer=True))

    ax.yaxis.tick_right()
    ax.set_ylabel('Current Cost', color='C1')
    ax.yaxis.set_label_position('right')
    ax.tick_params(axis='y', colors='C1')

    # if filename:
    #     plt.savefig(filename)

    plt.grid(True, which='both', axis='both', color='grey', linestyle='--', linewidth=0.4)
    ax.grid(True, which='both', axis='x', color='grey', linestyle='--', linewidth=0.4)

    plt.show()


costs = np.array([3051, 4082, 4248, 1824, 12637, 2719, 4843, 12590, 4823, 2261, 11698, 11610, 2502, 14366, 4855, 16492, 1091, 3904, 4347, 12047, 3914, 3414, 11917, 3951, 8535, 1632, 4349, 1285, 2650, 1075, 11971, 5282, 5255, 3408, 9938, 4976, 5390, 868, 1557, 5383, 928, 1450, 10379, 3031, 6275, 5689, 4506, 3930, 5505, 3724, 3499, 2601, 5215, 2460, 15913, 2254, 2816, 2898, 1411, 4625, 1102, 3631, 6159, 3800, 4372, 6095, 635, 2661, 6964, 1495, 5320, 993, 6240, 5526, 3946, 7638, 4562, 3112, 6649, 1620, 3100, 3575, 8599, 2086, 4200, 8598, 14611, 7055, 6284, 2057, 5402, 5258, 2880, 5970, 4555, 20184, 12778, 10868, 3966, 613, 9505, 7993, 1626, 2983, 2251, 5127, 5298, 2708, 2658, 1787, 6749, 8319, 4930, 7975, 2213, 4501, 8694, 3493, 3130, 10403, 8137, 1716, 8388, 1291, 3015, 3691, 11547, 13669, 3020, 3171, 1846, 7252, 4262, 5178, 1341, 1644, 4495, 2088, 14337, 7019, 19111, 3032, 9315, 2151, 7242, 2978, 4917, 1573, 2025, 2597, 3900, 1381, 6472, 5698, 3335, 1582, 1163, 1991, 4426, 1393, 4235, 2406, 9382, 1495, 1760, 8187, 3155, 2553, 4647, 3328, 8116, 5397, 8584, 1535, 2480, 2683, 3567, 4102, 1764, 12878, 6065, 3138, 3697, 3735, 4866, 5700, 946, 2091, 6065, 6249, 2917, 3941, 5909, 2360, 3543, 3094, 3146, 1073, 3871, 3180, 1014, 6199, 2455, 983, 10510, 2541, 17872, 2000, 7995, 3628, 4871, 851, 3383, 5655, 13982, 2201, 3201, 1588, 2650, 1980, 2708, 6613, 3235])
score = np.array([5883, 4260, 4620, 7324, -3092, 5806, 4229, -4451, 4430, 9712, -5585, -3724, 5137, -6459, 3251, -10426, 6856, 5018, 4252, -5192, 4445, 5601, -2532, 4632, -1432, 6513, 7488, 10718, 5248, 7066, -4305, 2355, 3701, 5614, -2086, 3831, 2563, 8339, 10704, 3786, 6068, 7858, -1793, 4888, 2172, 5330, 4828, 5032, 5674, 5015, 5201, 9152, 3372, 6480, -7975, 5669, 6261, 5735, 7825, 7036, 8105, 4991, 2339, 4829, 4579, 2990, 8507, 9563, 814, 7665, 3310, 11181, 2524, 2788, 4341, 364, 4027, 5935, 3525, 7508, 5523, 5201, -1009, 6620, 4405, -980, -7490, 1017, 1685, 10060, 3071, 3008, 3837, 3110, 4666, -14314, -4561, -4293, 4806, 11500, 2769, 3060, 7620, 5992, 6451, 3787, 3200, 5497, 5244, 6017, 3309, -248, 4060, -1139, 10018, 5111, -2478, 7859, 5901, -2609, 884, 7268, -577, 7806, 5534, 4824, -5197, -4037, 5030, 5643, 7252, 1378, 4308, 2932, 10666, 7497, 3637, 6855, -3697, 1477, -13555, 5663, -1438, 6833, -153, 5509, 6058, 10565, 9708, 9329, 3490, 10775, 2356, 3004, 4547, 6513, 7888, 7160, 3812, 10863, 4172, 6473, -1454, 7645, 6132, -1428, 5796, 9512, 3985, 5351, -318, 6273, -2895, 7170, 6388, 6461, 5798, 3699, 6291, -8043, 3421, 4517, 8513, 3986, 3845, 2702, 8336, 6018, 3827, 4276, 8852, 7753, 5569, 6435, 5388, 5911, 4831, 11041, 4611, 5799, 8122, 1758, 6232, 6991, -3472, -95473, -12283, 7219, -370, 4985, 3981, 8326, 5534, 2985, -6514, 9214, 8090, 7200, 6157, 5948, 6004, -99949, 5353])
x = np.arange(len(costs))
steps = '...'
time = '...'
print(x)


plot_learning_curve(x, costs, score, steps,  time)
